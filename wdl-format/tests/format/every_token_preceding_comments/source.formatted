#1

version
    #2
    1.0

#3
workflow
    #4
    test_wf
    #5
{
    #6
    meta
        #7
    {
        #8
        description
            #9
            :
            #10
            "Test workflow"
    #11
    }

    parameter_meta {
        out_sj_filter_overhang_min: {
            type: "SpliceJunctionMotifs",
            label: "Minimum overhang required to support a splicing junction",
        }
    }

    input {
        SpliceJunctionMotifs out_sj_filter_overhang_min = SpliceJunctionMotifs
    {
noncanonical_motifs
:
 30
 , 
GT_AG_and_CT_AC_motif 
: 
12 
, 
}
    }

    call test_task as foo { input: bowchicka = "wowwow" }
    if (true) {
        call test_task after foo { input: bowchicka = "bowchicka" }
        scatter (i in range(3)) {
            call test_task as bar { input: bowchicka = i * 42 }
        }
    }

    output {
        SpliceJunctionMotifs KAZAM = out_sj_filter_overhang_min
    }
}

task test_task {
    parameter_meta {
        bowchicka: {
            type: "String",
            label: "Bowchicka",
        }
    }

    input {
        String bowchicka
    }

    command <<<>>>
}

struct SpliceJunctionMotifs {
    Int noncanonical_motifs
    Int GT_AG_and_CT_AC_motif
}
