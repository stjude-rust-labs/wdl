note[ExpressionSpacing]: assignments must be surrounded by whitespace
   ┌─ tests/lints/expression-spacing/source.wdl:14:14
   │
14 │         Int a=- 1
   │              ^
   │
   = fix: add a space before and after this assignment

note[ExpressionSpacing]: prefix operators may not contain whitespace
   ┌─ tests/lints/expression-spacing/source.wdl:14:15
   │
14 │         Int a=- 1
   │               ^^^
   │
   = fix: remove the internal whitespace

note[ExpressionSpacing]: operators must be followed by whitespace
   ┌─ tests/lints/expression-spacing/source.wdl:21:31
   │
21 │         Int complex_value = w -x +( y* ( z /(f %b) ))
   │                               ^
   │
   = fix: add a space after this operator

note[ExpressionSpacing]: operators must be followed by whitespace
   ┌─ tests/lints/expression-spacing/source.wdl:21:34
   │
21 │         Int complex_value = w -x +( y* ( z /(f %b) ))
   │                                  ^
   │
   = fix: add a space after this operator

note[ExpressionSpacing]: this space is not allowed
   ┌─ tests/lints/expression-spacing/source.wdl:21:36
   │
21 │         Int complex_value = w -x +( y* ( z /(f %b) ))
   │                                    ^
   │
   = fix: remove the space

note[ExpressionSpacing]: operators must be preceded by whitespace
   ┌─ tests/lints/expression-spacing/source.wdl:21:38
   │
21 │         Int complex_value = w -x +( y* ( z /(f %b) ))
   │                                      ^
   │
   = fix: add a space before this operator

note[ExpressionSpacing]: this space is not allowed
   ┌─ tests/lints/expression-spacing/source.wdl:21:41
   │
21 │         Int complex_value = w -x +( y* ( z /(f %b) ))
   │                                         ^
   │
   = fix: remove the space

note[ExpressionSpacing]: operators must be followed by whitespace
   ┌─ tests/lints/expression-spacing/source.wdl:21:44
   │
21 │         Int complex_value = w -x +( y* ( z /(f %b) ))
   │                                            ^
   │
   = fix: add a space after this operator

note[ExpressionSpacing]: operators must be followed by whitespace
   ┌─ tests/lints/expression-spacing/source.wdl:21:48
   │
21 │         Int complex_value = w -x +( y* ( z /(f %b) ))
   │                                                ^
   │
   = fix: add a space after this operator

note[ExpressionSpacing]: this space is not allowed
   ┌─ tests/lints/expression-spacing/source.wdl:21:51
   │
21 │         Int complex_value = w -x +( y* ( z /(f %b) ))
   │                                                   ^
   │
   = fix: remove the space

note[ExpressionSpacing]: operators must be followed by whitespace
   ┌─ tests/lints/expression-spacing/source.wdl:43:29
   │
43 │                             ||!e
   │                             ^^
   │
   = fix: add a space after this operator

note[ExpressionSpacing]: multi-line if...then...else must have a preceding parenthesis and newline
   ┌─ tests/lints/expression-spacing/source.wdl:59:21
   │
59 │         Boolean v = if 
   │                     ^^
   │
   = fix: add a open parenthesis and newline prior to this if

note[ExpressionSpacing]: multi-line if...then...else must have a preceding space
   ┌─ tests/lints/expression-spacing/source.wdl:60:15
   │
60 │         a < b then true
   │               ^^^^
   │
   = fix: add a newline before the then keyword

note[ExpressionSpacing]: multi-line if...then...else must have a following newline and parenthesis
   ┌─ tests/lints/expression-spacing/source.wdl:61:9
   │
61 │         else false
   │         ^^^^
   │
   = fix: add a newline and close parenthesis after to this else clause

note[ExpressionSpacing]: multi-line if...then...else must have a preceding space
   ┌─ tests/lints/expression-spacing/source.wdl:66:22
   │
66 │             if a < b then true
   │                      ^^^^
   │
   = fix: add a newline before the then keyword

note[ExpressionSpacing]: multi-line if...then...else must have a preceding space
   ┌─ tests/lints/expression-spacing/source.wdl:71:22
   │
71 │             if a < b then true
   │                      ^^^^
   │
   = fix: add a newline before the then keyword

note[ExpressionSpacing]: multi-line array/map/object literals must have a newline following the opening token
   ┌─ tests/lints/expression-spacing/source.wdl:81:21
   │
81 │         Boolean i = [1
   │                     ^
   │
   = fix: add a newline after this token

note[ExpressionSpacing]: multi-line array/map/object literals must have a newline preceding the closing token
   ┌─ tests/lints/expression-spacing/source.wdl:83:18
   │
83 │             ,2,3,] == [1,2,4]
   │                  ^
   │
   = fix: add a newline before this token

note[CommentWhitespace]: comment not sufficiently indented
    ┌─ tests/lints/expression-spacing/source.wdl:104:13
    │
104 │             # This comment will flag, because the  `] == [` expression is incorrect.
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = fix: this comment has 3 levels of indentation. It should have 4 levels of indentation.

note[CommentWhitespace]: comment not sufficiently indented
    ┌─ tests/lints/expression-spacing/source.wdl:138:13
    │
138 │             # This comment will flag, because the  `} == {` expression is incorrect.
    │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    │
    = fix: this comment has 3 levels of indentation. It should have 4 levels of indentation.

note[ExpressionSpacing]: multi-line array/map/object literals must have a newline following the opening token
    ┌─ tests/lints/expression-spacing/source.wdl:149:24
    │
149 │         Array[Int] p = [1,
    │                        ^
    │
    = fix: add a newline after this token

note[ExpressionSpacing]: multi-line array/map/object literals must have a newline preceding the closing token
    ┌─ tests/lints/expression-spacing/source.wdl:150:13
    │
150 │         2,3,]
    │             ^
    │
    = fix: add a newline before this token

note[ExpressionSpacing]: prefix operators may not contain whitespace
    ┌─ tests/lints/expression-spacing/source.wdl:157:21
    │
157 │         Boolean b = ! a
    │                     ^^^
    │
    = fix: remove the internal whitespace

